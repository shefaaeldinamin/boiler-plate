{"ast":null,"code":"var _jsxFileName = \"/home/shefaa/Public/Courses/React/Ibtikar task/01-starting-project (1)/01-starting-project/src/components/Auth/VerifyCodeForm.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\nimport useBasicInput from \"../hooks/use-basic-input\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForgotPasswordForm = () => {\n  _s();\n\n  const [errors, setErrors] = useState({});\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n  const {\n    value: enteredToken,\n    enteredValueIsValid: tokenIsValid,\n    valueHasError: tokenHasError,\n    valueChangehandler: tokenChangehandler,\n    valueBlurHandler: tokenBlurHandler,\n    reset: nameReset\n  } = useBasicInput(value => value.trim() !== \"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    console.log(authCtx.forgotPasswordEmail);\n    setIsLoading(true);\n    const url = \"https://boiler-stage.ibtikar.sa/api/v1/users/password/validate-token\";\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        token: enteredToken,\n        email: authCtx.forgotPasswordEmail\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      setIsLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(response => {\n          console.log(response);\n          let errorMessage = \"Authentication failed!\";\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(response => {\n      console.log(response);\n      console.log(response.data.token);\n      authCtx.forgetPasswordToken(enteredToken);\n      history.replace(\"/reset-password\");\n    }).catch(err => {\n      setErrors(errors => {\n        return { ...errors,\n          tokenError: err.message\n        };\n      });\n      console.log(errors);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Verify code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"token\",\n          children: \"Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"token\",\n          required: true,\n          value: enteredToken,\n          onChange: tokenChangehandler,\n          onBlur: tokenBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 26\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Laoding... \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ForgotPasswordForm, \"mhhy9rjBz1kuAgLunDrbhqWV/lc=\", false, function () {\n  return [useHistory, useBasicInput];\n});\n\n_c = ForgotPasswordForm;\nexport default ForgotPasswordForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPasswordForm\");","map":{"version":3,"sources":["/home/shefaa/Public/Courses/React/Ibtikar task/01-starting-project (1)/01-starting-project/src/components/Auth/VerifyCodeForm.js"],"names":["useContext","useState","useHistory","AuthContext","useBasicInput","classes","ForgotPasswordForm","errors","setErrors","authCtx","history","value","enteredToken","enteredValueIsValid","tokenIsValid","valueHasError","tokenHasError","valueChangehandler","tokenChangehandler","valueBlurHandler","tokenBlurHandler","reset","nameReset","trim","isLoading","setIsLoading","submitHandler","event","preventDefault","console","log","forgotPasswordEmail","url","fetch","method","body","JSON","stringify","token","email","headers","then","res","ok","json","response","errorMessage","Error","data","forgetPasswordToken","replace","catch","err","tokenError","message","auth","control","actions"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\nimport useBasicInput from \"../hooks/use-basic-input\";\n\n\nimport classes from \"./AuthForm.module.css\";\n\nconst ForgotPasswordForm = () => {\n  const [errors, setErrors] = useState({});\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n  const {\n    value: enteredToken,\n    enteredValueIsValid: tokenIsValid,\n    valueHasError: tokenHasError,\n    valueChangehandler: tokenChangehandler,\n    valueBlurHandler: tokenBlurHandler,\n    reset: nameReset,\n  } = useBasicInput((value) => value.trim() !== \"\");\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    console.log(authCtx.forgotPasswordEmail);\n    setIsLoading(true);\n    const url =\n      \"https://boiler-stage.ibtikar.sa/api/v1/users/password/validate-token\";\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        token: enteredToken,\n        email: authCtx.forgotPasswordEmail,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((response) => {\n            console.log(response);\n            let errorMessage = \"Authentication failed!\";\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((response) => {\n        console.log(response);\n        console.log(response.data.token);\n        authCtx.forgetPasswordToken(enteredToken);\n        history.replace(\"/reset-password\");\n      })\n      .catch((err) => {\n        setErrors((errors) => {\n          return { ...errors, tokenError: err.message };\n        });\n        console.log(errors);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>Verify code</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"token\">Code</label>\n          <input type=\"text\" id=\"token\" required value={enteredToken} onChange={tokenChangehandler} onBlur={tokenBlurHandler} />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>Submit</button>}\n          {isLoading && <p> Laoding... </p>}\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default ForgotPasswordForm;\n"]},"metadata":{},"sourceType":"module"}