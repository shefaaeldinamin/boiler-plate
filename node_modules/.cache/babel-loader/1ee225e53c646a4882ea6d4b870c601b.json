{"ast":null,"code":"var _jsxFileName = \"/home/shefaa/Public/Courses/React/Ibtikar task/01-starting-project (1)/01-starting-project/src/components/Auth/RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\nimport \"react-phone-number-input/style.css\";\nimport PhoneInput from \"react-phone-number-input\";\nimport classes from \"./AuthForm.module.css\";\nimport useBasicInput from \"../hooks/use-basic-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = () => {\n  _s();\n\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n  const passwordConfirmationInputRef = useRef();\n  const mobileNumberInputRef = useRef();\n\n  const validateEmail = email => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  const {\n    value: enteredEmail,\n    enteredValueIsValid: emailIsValid,\n    valueHasError: emailHasError,\n    valueChangehandler: emailChangehandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: emailReset\n  } = useBasicInput(validateEmail);\n  const {\n    value: enteredName,\n    enteredValueIsValid: nameIsValid,\n    valueHasError: nameHasError,\n    valueChangehandler: nameChangehandler,\n    valueBlurHandler: nameBlurHandler,\n    reset: nameReset\n  } = useBasicInput(value => value.trim() !== \"\");\n  const {\n    value: enteredPassword,\n    enteredValueIsValid: passwordIsValid,\n    valueHasError: passwordHasError,\n    valueChangehandler: passwordChangehandler,\n    valueBlurHandler: passwordBlurHandler,\n    reset: passwordReset\n  } = useBasicInput(value => !(value.length < 8));\n  const [isLoading, setIsLoading] = useState(false);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredPasswordConfirmation = passwordConfirmationInputRef.current.value;\n    const enteredMobileNumber = mobileNumberInputRef.current.value;\n    setIsLoading(true);\n    const url = \"https://boiler-stage.ibtikar.sa/api/v1/users\";\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        name: enteredName,\n        password_confirmation: enteredPasswordConfirmation,\n        mobile_number: enteredMobileNumber,\n        returnSecureToken: true\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      setIsLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          console.log(data);\n          let errorMessage = \"Authentication failed!\";\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      console.log(\"pushed\");\n      history.push(\"/login\");\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${nameHasError ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          required: true,\n          value: enteredName,\n          onChange: nameChangehandler,\n          onBlur: nameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), nameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.error,\n          children: \"Name is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailHasError ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          value: enteredEmail,\n          onChange: emailChangehandler,\n          onBlur: emailBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.error,\n          children: \"Email format is invalid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mobile_number\",\n          children: \"Mobile number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"mobile_number\",\n          required: true,\n          ref: mobileNumberInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          value: enteredPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password_confirmation\",\n          children: \"Password confirmation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password_confirmation\",\n          required: true,\n          ref: passwordConfirmationInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: /*#__PURE__*/_jsxDEV(PhoneInput, {\n          international: true,\n          defaultCountry: \"EG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 26\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Laoding... \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterForm, \"XcGhgDSLLaZgs4f5Yl6tII0TtyY=\", false, function () {\n  return [useHistory, useBasicInput, useBasicInput, useBasicInput];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/home/shefaa/Public/Courses/React/Ibtikar task/01-starting-project (1)/01-starting-project/src/components/Auth/RegisterForm.js"],"names":["useContext","useRef","useState","useHistory","AuthContext","PhoneInput","classes","useBasicInput","RegisterForm","authCtx","history","passwordConfirmationInputRef","mobileNumberInputRef","validateEmail","email","re","test","String","toLowerCase","value","enteredEmail","enteredValueIsValid","emailIsValid","valueHasError","emailHasError","valueChangehandler","emailChangehandler","valueBlurHandler","emailBlurHandler","reset","emailReset","enteredName","nameIsValid","nameHasError","nameChangehandler","nameBlurHandler","nameReset","trim","enteredPassword","passwordIsValid","passwordHasError","passwordChangehandler","passwordBlurHandler","passwordReset","length","isLoading","setIsLoading","submitHandler","event","preventDefault","enteredPasswordConfirmation","current","enteredMobileNumber","url","fetch","method","body","JSON","stringify","password","name","password_confirmation","mobile_number","returnSecureToken","headers","then","res","ok","json","data","console","log","errorMessage","Error","push","catch","err","alert","message","auth","control","invalid","error","actions"],"mappings":"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","sourcesContent":["import { useContext, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\nimport \"react-phone-number-input/style.css\";\nimport PhoneInput from \"react-phone-number-input\";\nimport classes from \"./AuthForm.module.css\";\nimport useBasicInput from \"../hooks/use-basic-input\";\n\nconst RegisterForm = () => {\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n  const passwordConfirmationInputRef = useRef();\n  const mobileNumberInputRef = useRef();\n\n  const validateEmail = (email) => {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  const {\n    value: enteredEmail,\n    enteredValueIsValid: emailIsValid,\n    valueHasError: emailHasError,\n    valueChangehandler: emailChangehandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: emailReset,\n  } = useBasicInput(validateEmail);\n\n  const {\n    value: enteredName,\n    enteredValueIsValid: nameIsValid,\n    valueHasError: nameHasError,\n    valueChangehandler: nameChangehandler,\n    valueBlurHandler: nameBlurHandler,\n    reset: nameReset,\n  } = useBasicInput(value => value.trim() !== \"\");\n\n  const {\n    value: enteredPassword,\n    enteredValueIsValid: passwordIsValid,\n    valueHasError: passwordHasError,\n    valueChangehandler: passwordChangehandler,\n    valueBlurHandler: passwordBlurHandler,\n    reset: passwordReset,\n  } = useBasicInput((value) => !(value.length < 8));\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const enteredPasswordConfirmation = passwordConfirmationInputRef.current.value;\n    const enteredMobileNumber = mobileNumberInputRef.current.value;\n\n    setIsLoading(true);\n    const url = \"https://boiler-stage.ibtikar.sa/api/v1/users\";\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        name: enteredName,\n        password_confirmation: enteredPasswordConfirmation,\n        mobile_number: enteredMobileNumber,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            console.log(data);\n            let errorMessage = \"Authentication failed!\";\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        console.log(\"pushed\");\n        history.push(\"/login\");\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>Register</h1>\n      <form onSubmit={submitHandler}>\n        <div     className={`${classes.control} ${\n            nameHasError ? classes.invalid : \"\"\n          }`}>\n          <label htmlFor=\"name\">Name</label>\n          <input type=\"text\" id=\"name\" required value={enteredName} onChange={nameChangehandler} onBlur={nameBlurHandler} />\n          {nameHasError && (\n            <p className={classes.error}>Name is required</p>\n          )}\n        </div>\n        <div\n          className={`${classes.control} ${\n            emailHasError ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            required\n            value={enteredEmail}\n            onChange={emailChangehandler}\n            onBlur={emailBlurHandler}\n          />\n          {emailHasError && (\n            <p className={classes.error}>Email format is invalid</p>\n          )}\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"mobile_number\">Mobile number</label>\n          <input\n            type=\"text\"\n            id=\"mobile_number\"\n            required\n            ref={mobileNumberInputRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            value={enteredPassword}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password_confirmation\">Password confirmation</label>\n          <input\n            type=\"password\"\n            id=\"password_confirmation\"\n            required\n            ref={passwordConfirmationInputRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <PhoneInput international defaultCountry=\"EG\" />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>Create Account</button>}\n          {isLoading && <p> Laoding... </p>}\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}