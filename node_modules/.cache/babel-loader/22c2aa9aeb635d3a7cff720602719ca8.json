{"ast":null,"code":"var _jsxFileName = \"/home/shefaa/Public/Courses/React/Ibtikar task/01-starting-project (1)/01-starting-project/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  forgotPasswordEmail: \"\",\n  login: token => {},\n  logout: () => {},\n  forgotPassword: email => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initialToken = localStorage.getItem('token');\n  const [token, setToken] = useState(initialToken);\n  const [forgotPasswordEmail, setForgotpasswordEmail] = useState(null);\n  const userIsloggedIn = !!token;\n\n  const loginHandler = token => {\n    setToken(token);\n    localStorage.setItem('token', token);\n  };\n\n  const logOutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n  };\n\n  const forgotPasswordHandler = email => {\n    setForgotpasswordEmail(email);\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsloggedIn,\n    login: loginHandler,\n    logout: logOutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"y3F2kKnDWcpxjBUOfUZxawFmYgU=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/home/shefaa/Public/Courses/React/Ibtikar task/01-starting-project (1)/01-starting-project/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","token","isLoggedIn","forgotPasswordEmail","login","logout","forgotPassword","email","AuthContextProvider","props","initialToken","localStorage","getItem","setToken","setForgotpasswordEmail","userIsloggedIn","loginHandler","setItem","logOutHandler","removeItem","forgotPasswordHandler","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,KAAK,EAAE,EAD+B;AAEtCC,EAAAA,UAAU,EAAE,KAF0B;AAGtCC,EAAAA,mBAAmB,EAAG,EAHgB;AAItCC,EAAAA,KAAK,EAAGH,KAAD,IAAW,CAAE,CAJkB;AAKtCI,EAAAA,MAAM,EAAE,MAAM,CAAE,CALsB;AAMtCC,EAAAA,cAAc,EAAGC,KAAD,IAAW,CAAE;AANS,CAApB,CAApB;AASA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,QAAM,CAACX,KAAD,EAAQY,QAAR,IAAoBf,QAAQ,CAACY,YAAD,CAAlC;AACA,QAAM,CAACP,mBAAD,EAAsBW,sBAAtB,IAAgDhB,QAAQ,CAAC,IAAD,CAA9D;AACA,QAAMiB,cAAc,GAAG,CAAC,CAACd,KAAzB;;AACA,QAAMe,YAAY,GAAIf,KAAD,IAAW;AAC9BY,IAAAA,QAAQ,CAACZ,KAAD,CAAR;AACAU,IAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA6BhB,KAA7B;AACD,GAHD;;AAIA,QAAMiB,aAAa,GAAG,MAAM;AAC1BL,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,IAAAA,YAAY,CAACQ,UAAb,CAAwB,OAAxB;AACD,GAHD;;AAKA,QAAMC,qBAAqB,GAAIb,KAAD,IAAW;AAC3CO,IAAAA,sBAAsB,CAACP,KAAD,CAAtB;AAAgC,GAD9B;;AAGA,QAAMc,YAAY,GAAG;AACnBpB,IAAAA,KAAK,EAAEA,KADY;AAEnBC,IAAAA,UAAU,EAAEa,cAFO;AAGnBX,IAAAA,KAAK,EAAEY,YAHY;AAInBX,IAAAA,MAAM,EAAEa;AAJW,GAArB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEG,YAA7B;AAAA,cACGZ,KAAK,CAACa;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA7BM;;GAAMd,mB;;KAAAA,mB;AA+Bb,eAAeT,WAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst AuthContext = React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  forgotPasswordEmail : \"\",\n  login: (token) => {},\n  logout: () => {},\n  forgotPassword: (email) => {}\n});\n\nexport const AuthContextProvider = (props) => {\n  const initialToken = localStorage.getItem('token');\n  const [token, setToken] = useState(initialToken);\n  const [forgotPasswordEmail, setForgotpasswordEmail] = useState(null);\n  const userIsloggedIn = !!token;\n  const loginHandler = (token) => {\n    setToken(token);\n    localStorage.setItem('token',token);\n  };\n  const logOutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n  };\n\n  const forgotPasswordHandler = (email) => {\nsetForgotpasswordEmail(email)  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsloggedIn,\n    login: loginHandler,\n    logout: logOutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}