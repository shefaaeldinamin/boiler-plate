{"ast":null,"code":"var _jsxFileName = \"/home/shefaa/Public/Courses/React/Ibtikar task/01-starting-project (1)/01-starting-project/src/components/Auth/ForgotPasswordForm.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\nimport useBasicInput from \"../hooks/use-basic-input\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForgotPasswordForm = () => {\n  _s();\n\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n  const [errors, setErrors] = useState({});\n\n  const validateEmail = email => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  const {\n    value: enteredEmail,\n    enteredValueIsValid: emailIsValid,\n    valueHasError: emailHasError,\n    valueChangehandler: emailChangehandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: emailReset\n  } = useBasicInput(validateEmail);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    setIsLoading(true);\n    const url = \"https://boiler-stage.ibtikar.sa/api/v1/users/password/forget\";\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      setIsLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(response => {\n          throw new Error('This email is invalid!');\n        });\n      }\n    }).then(response => {\n      console.log(response);\n      authCtx.forgotPassword(enteredEmail);\n      console.log(authCtx.forgotPasswordEmail);\n      history.push(\"/verify-code\");\n    }).catch(err => {});\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Forgot password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailHasError ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          value: enteredEmail,\n          onChange: emailChangehandler,\n          onBlur: emailBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.error,\n          children: \"Email format is invalid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 26\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Laoding... \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ForgotPasswordForm, \"2QY/8xsf/TppfNjFgExaRZgqc2g=\", false, function () {\n  return [useHistory, useBasicInput];\n});\n\n_c = ForgotPasswordForm;\nexport default ForgotPasswordForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPasswordForm\");","map":{"version":3,"sources":["/home/shefaa/Public/Courses/React/Ibtikar task/01-starting-project (1)/01-starting-project/src/components/Auth/ForgotPasswordForm.js"],"names":["useContext","useRef","useState","useHistory","AuthContext","useBasicInput","classes","ForgotPasswordForm","authCtx","history","errors","setErrors","validateEmail","email","re","test","String","toLowerCase","value","enteredEmail","enteredValueIsValid","emailIsValid","valueHasError","emailHasError","valueChangehandler","emailChangehandler","valueBlurHandler","emailBlurHandler","reset","emailReset","isLoading","setIsLoading","submitHandler","event","preventDefault","url","fetch","method","body","JSON","stringify","headers","then","res","ok","json","response","Error","console","log","forgotPassword","forgotPasswordEmail","push","catch","err","auth","control","invalid","error","actions"],"mappings":"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","sourcesContent":["import { useContext, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\nimport useBasicInput from \"../hooks/use-basic-input\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst ForgotPasswordForm = () => {\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n  const [errors, setErrors] = useState({});\n\n\n  const validateEmail = (email) => {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  const {\n    value: enteredEmail,\n    enteredValueIsValid: emailIsValid,\n    valueHasError: emailHasError,\n    valueChangehandler: emailChangehandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: emailReset,\n  } = useBasicInput(validateEmail);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n    const url = \"https://boiler-stage.ibtikar.sa/api/v1/users/password/forget\";\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((response) => {\n            throw new Error('This email is invalid!');\n          });\n        }\n      })\n      .then((response) => {\n        console.log(response);\n        authCtx.forgotPassword(enteredEmail);\n        console.log(authCtx.forgotPasswordEmail);\n        history.push(\"/verify-code\");\n      })\n      .catch((err) => {\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>Forgot password</h1>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailHasError ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            required\n            value={enteredEmail}\n            onChange={emailChangehandler}\n            onBlur={emailBlurHandler}\n          />\n           {emailHasError && (\n            <p className={classes.error}>Email format is invalid</p>\n          )}\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>Submit</button>}\n          {isLoading && <p> Laoding... </p>}\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default ForgotPasswordForm;\n"]},"metadata":{},"sourceType":"module"}