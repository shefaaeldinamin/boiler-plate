{"ast":null,"code":"var _jsxFileName = \"/home/shefaa/Public/Courses/React/Ibtikar task/01-starting-project (1)/01-starting-project/src/components/Auth/ResetPasswordForm.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPasswordForm = () => {\n  _s();\n\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n  const passwordInputRef = useRef();\n  const passwordConfirmationInputRef = useRef();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredPassword = passwordInputRef.current.value;\n    const enteredName = nameInputRef.current.value;\n    const enteredPasswordConfirmation = passwordConfirmationInputRef.current.value;\n    const enteredMobileNumber = mobileNumberInputRef.current.value;\n    setIsLoading(true);\n    const url = \"https://boiler-stage.ibtikar.sa/api/v1/users\";\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        name: enteredName,\n        password_confirmation: enteredPasswordConfirmation,\n        mobile_number: enteredMobileNumber,\n        returnSecureToken: true\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      setIsLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          console.log(data);\n          let errorMessage = \"Authentication failed!\";\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      console.log('pushed');\n      history.push(\"/login\");\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          required: true,\n          ref: nameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mobile_number\",\n          children: \"Mobile number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"mobile_number\",\n          required: true,\n          ref: mobileNumberInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password_confirmation\",\n          children: \"Password confirmation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password_confirmation\",\n          required: true,\n          ref: passwordConfirmationInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 26\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Laoding... \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPasswordForm, \"nWRgIlDVKpK3+58qly+jN0XXBTE=\", false, function () {\n  return [useHistory];\n});\n\n_c = ResetPasswordForm;\nexport default ResetPasswordForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPasswordForm\");","map":{"version":3,"sources":["/home/shefaa/Public/Courses/React/Ibtikar task/01-starting-project (1)/01-starting-project/src/components/Auth/ResetPasswordForm.js"],"names":["useContext","useRef","useState","useHistory","AuthContext","classes","ResetPasswordForm","authCtx","history","passwordInputRef","passwordConfirmationInputRef","isLoading","setIsLoading","submitHandler","event","preventDefault","enteredPassword","current","value","enteredName","nameInputRef","enteredPasswordConfirmation","enteredMobileNumber","mobileNumberInputRef","url","fetch","method","body","JSON","stringify","email","enteredEmail","password","name","password_confirmation","mobile_number","returnSecureToken","headers","then","res","ok","json","data","console","log","errorMessage","Error","push","catch","err","alert","message","auth","control","emailInputRef","actions"],"mappings":"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","sourcesContent":["import { useContext, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst ResetPasswordForm = () => {\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n  const passwordInputRef = useRef();\n  const passwordConfirmationInputRef = useRef();\n\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const enteredPassword = passwordInputRef.current.value;\n    const enteredName = nameInputRef.current.value;\n    const enteredPasswordConfirmation = passwordConfirmationInputRef.current.value;\n    const enteredMobileNumber = mobileNumberInputRef.current.value;\n\n\n\n    setIsLoading(true);\n    const url = \"https://boiler-stage.ibtikar.sa/api/v1/users\";\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        name: enteredName,\n        password_confirmation: enteredPasswordConfirmation,\n        mobile_number: enteredMobileNumber,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            console.log(data);\n            let errorMessage = \"Authentication failed!\";\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        console.log('pushed');\n        history.push(\"/login\");\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>Register</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"name\">Name</label>\n          <input type=\"text\" id=\"name\" required ref={nameInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"mobile_number\">Mobile number</label>\n          <input type=\"text\" id=\"mobile_number\" required ref={mobileNumberInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password_confirmation\">Password confirmation</label>\n          <input\n            type=\"password\"\n            id=\"password_confirmation\"\n            required\n            ref={passwordConfirmationInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>Create Account</button>}\n          {isLoading && <p> Laoding... </p>}\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default ResetPasswordForm;\n"]},"metadata":{},"sourceType":"module"}