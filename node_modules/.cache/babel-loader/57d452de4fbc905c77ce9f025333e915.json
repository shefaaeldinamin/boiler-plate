{"ast":null,"code":"var _jsxFileName = \"/home/shefaa/Public/Courses/React/Ibtikar task/01-starting-project (1)/01-starting-project/src/components/Auth/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useRef, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\nimport useBasicInput from \"../hooks/use-basic-input\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n  const passwordInputRef = useRef();\n  const {\n    value: enteredEmail,\n    enteredValueIsValid: emailIsValid,\n    valueHasError: emailHasError,\n    valueChangehandler: emailChangehandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: emailReset\n  } = useBasicInput(value => value.trim().includes('@'));\n  const [isLoading, setIsLoading] = useState(false);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredPassword = passwordInputRef.current.value;\n    setIsLoading(true);\n    const url = \"https://boiler-stage.ibtikar.sa/api/v1/users/login\";\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        client_id: 2,\n        client_secret: \"fhMZQxfVREJrII50IeN4ThIZCerdOFjxiRGu7Lc0\"\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      setIsLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(response => {\n          console.log(response);\n          let errorMessage = \"Authentication failed!\";\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(response => {\n      console.log(`Access token = ${response.data.access_token}`);\n      authCtx.login(response.data.access_token);\n      history.push(\"/\");\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${!emailIsValid ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          onChange: emailChangehandler,\n          onBlur: emailBlurHandler,\n          value: enteredEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 26\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Laoding... \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/forgot-password\",\n          children: \"Forgot password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"R3Ym0P5rh02lPrIL+fRxypr30fY=\", false, function () {\n  return [useHistory, useBasicInput];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/shefaa/Public/Courses/React/Ibtikar task/01-starting-project (1)/01-starting-project/src/components/Auth/LoginForm.js"],"names":["useContext","useRef","useState","Link","useHistory","AuthContext","useBasicInput","classes","LoginForm","authCtx","history","passwordInputRef","value","enteredEmail","enteredValueIsValid","emailIsValid","valueHasError","emailHasError","valueChangehandler","emailChangehandler","valueBlurHandler","emailBlurHandler","reset","emailReset","trim","includes","isLoading","setIsLoading","submitHandler","event","preventDefault","enteredPassword","current","url","fetch","method","body","JSON","stringify","email","password","client_id","client_secret","headers","then","res","ok","json","response","console","log","errorMessage","Error","data","access_token","login","push","catch","err","alert","message","auth","control","invalid","actions"],"mappings":"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","sourcesContent":["import { useContext, useRef, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\nimport useBasicInput from \"../hooks/use-basic-input\"\n\nimport classes from \"./AuthForm.module.css\";\n\nconst LoginForm = () => {\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n  const passwordInputRef = useRef();\n\n  const {\n    value: enteredEmail,\n    enteredValueIsValid:emailIsValid,\n    valueHasError: emailHasError,\n    valueChangehandler: emailChangehandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: emailReset,\n  } = useBasicInput(value => value.trim().includes('@'));\n\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const enteredPassword = passwordInputRef.current.value;\n\n    setIsLoading(true);\n    const url = \"https://boiler-stage.ibtikar.sa/api/v1/users/login\";\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        client_id : 2,\n        client_secret : \"fhMZQxfVREJrII50IeN4ThIZCerdOFjxiRGu7Lc0\"\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((response) => {\n            console.log(response);\n            let errorMessage = \"Authentication failed!\";\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((response) => {\n        console.log(`Access token = ${response.data.access_token}`);\n        authCtx.login(response.data.access_token);\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>Login</h1>\n      <form onSubmit={submitHandler}>\n        <div className={`${classes.control} ${!emailIsValid ? classes.invalid : ''}`}>\n          <label htmlFor=\"email\">Email</label>\n          <input type=\"email\" id=\"email\" required onChange={emailChangehandler} onBlur={emailBlurHandler} value={enteredEmail} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>Login</button>}\n          {isLoading && <p> Laoding... </p>}\n          <Link to=\"/forgot-password\">Forgot password?</Link>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}