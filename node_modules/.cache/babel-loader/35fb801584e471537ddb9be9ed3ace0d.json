{"ast":null,"code":"var _jsxFileName = \"/home/shefaa/Public/Courses/React/Ibtikar task/01-starting-project (1)/01-starting-project/src/components/Auth/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useRef, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\nimport useBasicInput from \"../hooks/use-basic-input\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n  const [errors, setErrors] = useState({});\n\n  const validateEmail = email => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  const {\n    value: enteredEmail,\n    enteredValueIsValid: emailIsValid,\n    valueHasError: emailHasError,\n    valueChangehandler: emailChangehandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: emailReset\n  } = useBasicInput(validateEmail);\n  const {\n    value: enteredPassword,\n    enteredValueIsValid: passwordIsValid,\n    valueHasError: passwordHasError,\n    valueChangehandler: passwordChangehandler,\n    valueBlurHandler: passwordBlurHandler,\n    reset: passwordReset\n  } = useBasicInput(value => !(value.length < 8));\n  let formIsValid = emailIsValid && passwordIsValid;\n  const [isLoading, setIsLoading] = useState(false);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    setIsLoading(true);\n    const url = \"https://boiler-stage.ibtikar.sa/api/v1/users/login\";\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        client_id: 2,\n        client_secret: \"fhMZQxfVREJrII50IeN4ThIZCerdOFjxiRGu7Lc0\"\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      setIsLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        let errorMessage = res.status === 401 ? \"Authentication failed!\" : \"Oops something went wrong, please try again later!\";\n        throw new Error(errorMessage);\n      }\n    }).then(response => {\n      console.log(`Access token = ${response.data.access_token}`);\n      authCtx.login(response.data.access_token);\n      history.push(\"/\");\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailHasError ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          onChange: emailChangehandler,\n          onBlur: emailBlurHandler,\n          value: enteredEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.error,\n          children: \"Email format is invalid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordHasError ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          onChange: passwordChangehandler,\n          onBlur: passwordBlurHandler,\n          value: enteredPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), passwordHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.error,\n          children: \"Invalid password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: formIsValid ? false : true,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 26\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Laoding... \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/forgot-password\",\n          children: \"Forgot password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"d1lK2Fizy5YckKT9o4yf8mE0ea8=\", false, function () {\n  return [useHistory, useBasicInput, useBasicInput];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/shefaa/Public/Courses/React/Ibtikar task/01-starting-project (1)/01-starting-project/src/components/Auth/LoginForm.js"],"names":["useContext","useRef","useState","Link","useHistory","AuthContext","useBasicInput","classes","LoginForm","authCtx","history","errors","setErrors","validateEmail","email","re","test","String","toLowerCase","value","enteredEmail","enteredValueIsValid","emailIsValid","valueHasError","emailHasError","valueChangehandler","emailChangehandler","valueBlurHandler","emailBlurHandler","reset","emailReset","enteredPassword","passwordIsValid","passwordHasError","passwordChangehandler","passwordBlurHandler","passwordReset","length","formIsValid","isLoading","setIsLoading","submitHandler","event","preventDefault","url","fetch","method","body","JSON","stringify","password","client_id","client_secret","headers","then","res","ok","json","errorMessage","status","Error","response","console","log","data","access_token","login","push","catch","err","alert","message","auth","control","invalid","error","actions"],"mappings":"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","sourcesContent":["import { useContext, useRef, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\nimport useBasicInput from \"../hooks/use-basic-input\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst LoginForm = () => {\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n  const [errors,setErrors] = useState({});\n\n  const validateEmail = (email) => {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  const {\n    value: enteredEmail,\n    enteredValueIsValid: emailIsValid,\n    valueHasError: emailHasError,\n    valueChangehandler: emailChangehandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: emailReset,\n  } = useBasicInput(validateEmail);\n\n  const {\n    value: enteredPassword,\n    enteredValueIsValid: passwordIsValid,\n    valueHasError: passwordHasError,\n    valueChangehandler: passwordChangehandler,\n    valueBlurHandler: passwordBlurHandler,\n    reset: passwordReset,\n  } = useBasicInput((value) => !(value.length < 8));\n\n  let formIsValid = emailIsValid && passwordIsValid;\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    setIsLoading(true);\n    const url = \"https://boiler-stage.ibtikar.sa/api/v1/users/login\";\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        client_id: 2,\n        client_secret: \"fhMZQxfVREJrII50IeN4ThIZCerdOFjxiRGu7Lc0\",\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n            let errorMessage = res.status===401 ? \"Authentication failed!\" : \"Oops something went wrong, please try again later!\";\n            throw new Error(errorMessage);\n        }\n      })\n      .then((response) => {\n        console.log(`Access token = ${response.data.access_token}`);\n        authCtx.login(response.data.access_token);\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>Login</h1>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailHasError ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            required\n            onChange={emailChangehandler}\n            onBlur={emailBlurHandler}\n            value={enteredEmail}\n          />\n          {emailHasError && (\n            <p className={classes.error}>Email format is invalid</p>\n          )}\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordHasError ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            onChange={passwordChangehandler}\n            onBlur={passwordBlurHandler}\n            value={enteredPassword}\n          />\n          {passwordHasError && (\n            <p className={classes.error}>Invalid password</p>\n          )}\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button disabled={formIsValid ? false : true}>Login</button>}\n          {isLoading && <p> Laoding... </p>}\n          <Link to=\"/forgot-password\">Forgot password?</Link>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}